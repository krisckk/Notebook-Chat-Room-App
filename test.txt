rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to manage their own profile
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth.uid == userId;

      match /friends/{friendId} {
        allow read: if request.auth.uid == userId;
        allow create: if request.auth.uid == userId;
        allow delete: if request.auth.uid == userId;
      }
    }

    // Chat rooms rules
    match /chatrooms/{roomId} {
      // Allow access only if user is part of this chat room
      allow read, write: if isParticipant(roomId);
      
      match /messages/{messageId} {
        // Can read if participant
        allow read: if isParticipant(roomId);
        // Can create messages with proper structure
        allow create: if isParticipant(roomId)
                   && request.auth.uid == request.resource.data.senderId
                   && request.resource.data.receiverId is string
                   && request.resource.data.text is string
                   && request.resource.data.timestamp == request.time;
        // Can only delete own messages
        allow delete: if request.auth.uid == resource.data.senderId;
        // Typically don't allow updates to prevent message tampering
        allow update: if false;
      }
    }

    // Helper function to check if user is a participant
    function isParticipant(roomId) {
      let participants = roomId.split('_');
      return request.auth != null 
             && (request.auth.uid == participants[0] 
                 || request.auth.uid == participants[1]);
    }
  }
}